package com.algo.dp

object JumpGameIV3 extends App {

  val input = Array(26429,-21409,-34678,23443,-36422,3788,-55423,5337,25229,-2951,-97298,-26399,92182,-2959,78868,-13725,88036,69418,-41650,-6086,10696,86293,-31902,-86619,-79899,-8377,-76593,4851,-44432,-33560,-17580,47924,-99473,-98065,22343,86126,-58397,-53615,-51122,-62350,45233,-66716,-88364,-6032,-15379,69822,-50435,-37094,-57703,39666,-47441,-77271,-75852,-48454,93616,11866,23095,3157,-17041,93192,-10963,-36130,4458,-8285,-5913,5201,75126,-64404,27250,-41306,-54158,-97744,-69488,-39653,-9837,-57802,97372,66880,42245,-42887,15299,64814,44068,-69600,40659,-71554,-7828,68441,-92090,-20377,-9658,-14378,-89911,75272,15752,-22202,-92839,73211,10055,-29158,-40499,-77644,62900,69667,10076,-92142,42678,53948,66773,29484,61845,25504,7268,15561,-34709,7787,-91656,41696,5898,81526,85090,-75023,40264,-26821,-22560,25129,87925,-68974,-98360,35201,-96610,33035,-95183,-69806,-41136,28546,57655,-20800,-3457,44637,-19010,50253,13754,-23007,68139,-1471,-60910,79123,-79766,-75983,-44091,17232,32470,-18106,94212,42282,81567,-25790,-44321,33524,-73703,-31464,19795,-69731,-86076,-33209,-27032,2161,83221,20377,-8640,-86357,73990,-21514,-17050,-5625,71679,79188,-27022,-85429,22366,65392,17653,69812,87282,-88746,-86475,81149,-57427,-51525,847,35886,-33221,-19260,15099,-20021,-76464,-97766,-26088,70077,24855,2473,45388,13648,-89763,-51208,77438,-6507,-46994,1388,60643,-57064,-8417,19565,-19001,75478,-82332,-43257,-29658,-28041,-89014,-55758,-80151,76538,-33896,46103,-86452,75258,-96866,-57187,-75690,87827,45320,32699,-27606,80637,64306,-74335,-78944,-17130,-33157,80239,369,68756,46752,-71429,31337,53844,-47604,22624,-42583,-22612,33228,84394,49357,49325,56424,-40884,-89967,-57237,94108,-63223,-37476,80233,-79650,54355,69775,20900,41507,64670,-87375,-7048,-92639,-78034,77764,63681,24600,34286,-2139,15417,99553,13288,-41681,453,-79595,47284,-54866,33148,-38793,94731,-35336,-25536,71661,-64567,-75749,-33114,-46214,-94111,31071,93771,-36970,-71466,-68896,44100,-80808,-44415,-67761,-69267,54928,-71780,-78283,32601,-81950,-5443,42657,97517,47315,-41891,87756,13336,-38770,45078,77602,33533,-74298,11382,-36857,-71407,-83198,42017,43980,-17619,-68571,21916,-86185,-74634,49880,12758,-47830,-3959,3842,73899,-30811,-70519,67654,84767,19233,5904,56014,-62225,94458,-93259,-63536,7574,-47874,74813,79748,-87634,-15580,35470,-8675,81443,-6844,-2813,18663,-86729,46398,-45880,-91689,-97081,-83914,42239,53775,-9854,-18624,-18754,-21491,-35271,19162,83914,37620,42595,43092,25651,-26179,-91453,-99820,17365,8925,-74505,28433,56152,68184,-38317,-53881,39258,-75310,90754,-81724,18397,59818,-50809,-88244,96580,912,24856,-85741,-26510,74422,27997,55590,10177,1549,-91512,-63015,72105,-10123,-27962,82146,42472,70263,-15892,94350,89393,31264,1111,75209,54036,-4638,26061,-90285,-1170,-74750,-19303,89787,84564,69436,23987,57137,5099,-72860,229,-95824,78907,-83315,73514,-6221,-15155,19451,23492,99855,-1548,-90200,-11686,75841,6389,-83977,-80924,-11152,90836,-54160,-39729,-87133,19386,-16138,-57062,8650,22780,87098,57025,54371,-23300,-75465,99603,34016,47934,-66342,77027,-52279,-73055,6403,-11780,-10190,-80449,-79397,-81261,26865,-93580,-39992,73284,39912,-81027,-97979,-56235,-27828,85211,-61250,36768,-39739,-76745,-77182,-58301,-97006,-60450,74586,15301,65723,95403,-141,-38139,35006,-61773,67175,-72472,46887,15952,-35858,-56879,-41224,-18697,5090,-17150,-41911,78071,60838,31405,-44068,-48722,15834,-26148,-39655,51135,-46019,38709,87411,-47594,-78197,4874,-24338,77754,90260,-52182,58764,-60232,-6987,-15539,-52677,-5654,39878,21112,-877,34924,93660,-54815,-45104,-16419,32592,62867,15,25112,-17378,40513,93862,12974,66688,8796,-9475,39035,29407,14742,95449,-19452,85685,22299,-26601,-39944,70063,84727,-53743,-29806,-83394,-14564,-25624,75584,5177,57845,17424,-33291,52120,57056,54175,48074,-93079,56636,-53782,-67599,-53076,2545,42560,-58922,31303,88022,46861,97350,-11335,75269,95561,-34314,-22597,-47629,-19069,-67044,9405,38827,59510,-31299,-89732,77102,98487,51970,38338,90472,25538,-98848,-35429,24602,-59192,77164,-62581,-25184,-37310,-17384,19714,56881,-52118,-17615,20302,958,34212,36715,-75798,-31925,8096,7154,71744,84941,-16157,12584,54683,-35941,-95995,-88627,-26839,-70222,-88202,-40036,57636,85099,-50557,9751,-40173,-93141,60190,900,22999,-84247,-96423,43643,94898,3749,-16324,-19221,-97593,36133,-77360,-2590,76398,-48435,15680,88068,-69659,-9486,-68988,14686,-28691,-48708,55538,-77618,-52213,-78847,76800,-42844,54174,16783,52664,2845,48334,-23364,60222,-2544,-82038,52314,75990,-46768,2890,-68239,-38185,83541,-24268,-74449,-70888,-97128,-87910,94378,-18483,-54485,-8668,-62963,65271,-32461,85183,27734,37491,-35723,75071,-8101,-73950,21918,-98310,49922,-91677,91802,-8366,-26291,-1225,78419,-68524,-68152,-11814,49944,47068,-53734,82760,-60091,-68606,-70137,-33142,-24923,48068,52728,-90934,-28502,25355,83595,31702,-36277,48800,9895,99265,-57154,54466,-47834,91612,-48120,27119,-6791,77819,85290,-49213,78352,-90273,87645,-34965,95029,-77086,-66494,68387,-54945,77040,38382,-57841,98283,-29562,56581,58469,75730,48174,65769,94405,17257,-98832,-31554,-4575,37534,33937,-8006,-49807,-82456,37578,89718,-13620,-97760,-20521,85895,93564,33438,70690,-43485,82995,-43014,-14557,67058,-73164,61989,63136,-64125,63629,-47281,30949,49964,-49799,-28147,33422,-66154,34104,-32740,-88674,97090,-53928,-19746,-66143,-46322,-8310,-6885,-14388,-62452,-75390,-95332,-10601,-7716,51726,-80566,-78353,74360,77757,-65982,13366,7822,-66018,16573,98081,20711,-78162,-38777,36174,-11156,-77269,-32095,53106,-48081,30036,55594,-12980,23085,-95918,49471,-10178,-66864,-25635,56392,-73869,75974,90301,94793,-8869,-6408,-86596,-81840,-96945,17181,39643,21535,-31240,-73593,-5715,85779,57421,13571,-49268,-5154,-68774,49254,-70443,-38874,-65511,60654,61647,-70728,-27638,96142,12938,-34977,-58617,-45035,-20626,-62842,-69375,21729,-15102,22067,-67998,64148,67332,90958,15205,-90468,6060,66318,-97748,-8956,-63861,-56976,-14499,-15296,-36819,27308,-57176,-89769,84967,-94212,80421,-7526,59492,-1805,-2793,-36878,49903,-46111,-15253,-65414,14331,95624,61841,-80499,73588,60553,1836,71929,-53415,79444,63550,-58927,27282,-5685,-80654,-33533,-2105,-6830,10501,-89168,-72674,-51582,52683,-45544,98833,84174,93275,-26669,13160,61265,-56581,30461,-35481,-70021,-89631,-63158,-31624,73833,-32643,2930,47577,-71010,94395,-78443,-72293,98546,-68594,44922,-25727,60985,24114,-1608,-11768,-408,-66345,-392,-67983,88534,82902,54326,31348,89665,-96136,97342,45047,-61754,56730,-2259,78753,54833,57690,-17312,54075,28665,16674,-86859,61529,46437,59253,43397,-41055,68934,-51834,-65848,-94866,57283,75472,90847,16707,-4594,-50596,29740,-88917,39501,79308,17570,35149,91166,25366,-91608,-47280,38437,29013,-38301,50072,-71989,5348,-63870,-93081,-22997,88163,98948,50817,45864,76955,-50071,-48821,-91239,14417,-91337,-74504,-94694,-37348,81639,93336,-23252,31260,-3045,-17648,-99002,92870,91769,-58443,50708,42600,-24233,27627,74394,22979,-89517,-82538,-7401,-61833,6020,-56993,-46064,-57326,52473,18208,-35466,2793,-12820,-56450,-82989,-31614,-6267,13735,-38569,65764,42182,-76048,18694,2006,-16829,16555,-66149,26500,-31162,-51226,68569,23150,-88852,52036,-10033,59507,11578,30936,-15997,78022,-11789,40592,90609,-61608,-72696,58874,-15262,-29593,90387,81796,23213,97286,31753,-7226,2595,6179,-52684,-82743,-18807,-72894,-60405,12498,44557,35533,37784,-65110,-87158,-92391,-49269,-95871,-25520,42730,46949,55971,-84624,81459,1367,-15692,-68749,57768,47015,85320,70476,-58699,6858,-53217,-95911,29336,-81028,91133,-84685,44800,-8527,-64723,-17563,52262,86329,54227,-18693,30411,73655,-39969,-66958,-53259,-50807,-95944,29493,-66256,-46653,-64361,-46990,33097,61662,28588,-63533,-72967,6512,52288,24246,93310,-1083,45285,-32751,60415,-48205,6347,-43368,-87796,8312,64309,-67118,-148,77748,-30718,67465,51587,-71430,-67131,16164,84668,-98721,-46282,61085,-90214,-45574,28033,-67886,-31978,-29363,-62234,24040,60058,48954,-28009,-79939,-26829,-35610,-32167,53803,-22533,51790,-54849,-73316,87441,68610,-95969,93599,99680,-50049,-84513,71015,-95960,57919,-6139,-55262,-13494,38015,7998,19180,-22158,-10634,-59020,33425,-28894,-64121,-55927,-64695,-81272,31192,61281,34149,48122,49500,-3552,-32870,81266,-81564,41520,-94763,25807,-72464,-99766,40744,28481,16157,83518,6954,11625,79694,-24010,-71637,43202,-15349,56316,49929,7395,35697,16459,25212,27612,-383,45811,12883,29026,-50684,-88067,41207,7248,45215,59516,-34162,-47466,46643,-19167,-36755,-88754,-17767,-43241,-77884,1959,-22237,-59136,71613,-81017,-44707,-40488,-7323,-30146,29587,34052,-6064,-88379,4669,44143,66917,63927,-83903,11443,-30188,13982,-29147,99533,73131,-51863,65420,-77911,15065,-90500,11218,-18263,-54840,-43347,-86097,-94626,31143,-60564,10620,72091,-50607,84734,86030,-3974,80123,-11436,-88788,25091,-10394,-7568,38615,-72599,38489,73698,-21111,46475,-5592,61796,4020,96011,-63469,23250,52477,71550,-36355,-6493,53246,-70539,99424,59009,65135,-74547,-91101,68663,-26724,56862,-33491,-96733,55638,-34033,23400,60903,-23182,5315,-99054,-84535,2204,47859,7324,-52296,69566,-94653,-68252,40999,-86673,71083,87897,18399,-85372,-33941,26647,-27336,-76635,-35513,86297,95928,32856,14614,-10480,79801,55843,4845,62369,-59598,-17553,-32096,46821,-27833,8410,42318,90792,-5404,-92016,-39866,-56382,-28229,-36838,-54210,-27650,-17886,48128,36631,-78936,80538,87020,-22314,46289,-90865,-79840,9590,-62858,-83192,-63266,85214,-30934,-77164,-18659,-86653,60166,-62293,-48422,58517,-75248,95184,-50613,5495,-88216,99864,-14244,58736,46395,77918,-79964,28985,10570,-378,33898,52384,36844,-96332,76909,-77645,14934,24784,63042,71148,-29940,-58203,-93620,-38494,-40490,-44633,71168,69780,-27172,18347,48273,60254,94849,61613,-22542,51906,-23675,-57544,10692,43705,-7088,-69094,52383,47587,-59435,-9810,-80137,-49730,-394,63458,-85485,-30123,-46323,-76542,-67236,-3900,-74516,90722,-34951,31096,-55248,39068,-64541,2556,68295,-99100,-13974,32273,-76653,18912,16709,-30244,-15461,83797,-58219,28249,-10784,-69126,-29089,37933,51205,-24671,36672,45736,69582,-47508,93646,36799,27868,95828,-22093,-99372,-74553,30037,-96003,84176,12284,72487,75581,45323,-35951,-57772,-54134,-16197,-99433,-87618,-45746,-63077,-49543,82639,60047,27850,80677,-12722,15735,-15372,-78571,-87527,66343,-42204,-43936,35984,-7195,-27302,-68167,51276,-67387,18388,35653,27584,-64788,62861,-20855,-92479,-69258,-10295,-74424,-12030,-87752,-61967,-96561,91189,55621,94075,-5354,34770,-37208,-39057,67055,41067,-57332,63019,-11034,2767,89472,98195,-47993,57303,-29961,-73475,-54608,88834,38639,46544,-16465,-65687,-65470,1147,83102,-16302,41411,13601,95093,25343,-21594,-54106,-46006,-14719,86431,-49539,60386,50932,-34819,47128,85284,46785,83598,43443,-27081,29314,67665,-88068,-66813,26028,-8117,-94288,-63594,-9681,-46844,20957,7892,59387,-22537,53603,-35042,-33394,73845,-46668,-5368,-41339,8915,-40725,85608,26566,17639,-82113,-23549,-77185,-63240,-70843,94080,83970,80569,85045,54139,-5218,75760,-15397,-48173,41116,-61277,-30752,64859,54633,68031,-17852,-63745,-45273,13208,-97595,-21485,18602,15694,42824,-73127,-95293,64720,80758,-53468,53290,28771,-53559,-57122,-72197,-98650,-20319,73601,-61841,-96125,-67035,486,-43122,-88372,-51379,80039,81437,41996,-25962,11366,49536,65417,-13528,-55121,2531,1526,81776,-52246,2039,88756,15564,-5270,32485,-59185,7982,39408,-55663,-39127,-44521,46558,69467,20011,-91991,13490,-70071,-44594,-29507,30464,29749,2213,-46972,54162,7478,64008,89467,96683,-51601,5558,-78026,45981,-98402,64068,3678,18629,87045,-57599,59354,-6481,32954,88858,-11499,70629,11975,6916,86114,78064,-6866,80333,81182,-51357,62672,-78286,30745,27025,60523,-71112,-65948,-51348,-34914,-88062,56311,-94662,78249,-94157,-3743,6353,-81932,-4892,-62336,27439,-16187,75765,94990,49721,-40151,-39142,25396,-46809,56875,4625,-42407,-88288,14067,-73339,-61057,-57282,-99927,97490,61341,-77444,-35838,32126,16973,-62404,-18843,75695,31606,-73455,-63654,-54380,-66824,-59764,-17626,-65472,28497,-89497,-19908,-86254,95649,63432,-99381,-10667,-89422,93132,-6867,61120,91031,-46811,-96402,14345,-96752,-25751,88519,30166,-44695,61560,-46369,-86777,70366,-45077,-82150,-53624,24030,-36996,-25099,98192,-91307,-53312,20597,30807,-1004,47352,-71861,11088,89553,-42893,-26364,-75735,-99680,-48791,40215,-63734,27936,-21180,33337,-50200,7933,-81402,-55841,85889,14326,97458,-28564,7451,69633,-23642,14105,69764,-51069,-66400,54168,-55120,53196,99397,-49707,-75399,67255,-37639,-59786,50925,-10027,9786,-29650,11773,13226,-20784,-90088,41202,94025,73145,-67279,57204,40853,21891,-49691,24219,-8092,-90852,-844,-4839,-13415,-28765,82932,61488,6932,-55702,2633,-29246,-92433,99622,-31879,-23396,-20265,-97428,-53346,-46410,73382,-73789,9606,-51825,-17581,36150,8564,-59638,-56124,-94558,36722,290,-8660,-29883,18864,63160,-89399,89050,14007,-69992,29384,-90096,-30458,25455,-26366,-83605,-94770,58984,39323,-39764,-37976,2877,-97704,-18337,32783,-18273,-68159,-11742,-64501,45765,-75119,47591,37919,-83649,42021,19133,11268)
  //  val input = Array(7, 6, 9, 6, 9, 6, 9, 7)
  val res = Solution.minJumps(input)
  println(res)

  object Solution {
    def minJumps(arr: Array[Int]): Int = {

      lazy val minJumpCount = Array.fill[Int](arr.length)(-1)

      @scala.annotation.tailrec
      def mapIndices(index: Int = 0, map: Map[Int, Seq[Int]] = Map()): Map[Int, Seq[Int]] = {
        if (index == arr.length) {
          map
        } else {
          map.get(arr(index)) match {
            case None =>
              mapIndices(index + 1, map + (arr(index) -> Seq(index)))
            case Some(indices) =>
              mapIndices(index + 1, map + (arr(index) -> (index +: indices)))
          }
        }
      }

      var numIndices: Map[Int, Seq[Int]] = mapIndices()

      def adjNeighboursOf(index: Int): Set[Int] = {
        if (index == 0) {
          Set(index + 1)
        } else if (index == arr.length - 1) {
          Set(index - 1)
        } else {
          Set(index + 1, index - 1)
        }
      }

      def sameNumNeighboursOf(index: Int): Seq[Int] = {
        val output = numIndices.getOrElse(arr(index), Nil)
        numIndices = numIndices - arr(index)
        output
      }

//      @scala.annotation.tailrec
//      def fillMinJumps(jumpCount: Int, sameNumNeighbours: Set[Int], adjNeighbours: Set[Int], visitedNeighbours: Set[Int]): Int = {
//        if (sameNumNeighbours.contains(0) || adjNeighbours.contains(0)) {
//          jumpCount + 1
//        } else {
//          val allNeighbours = sameNumNeighbours ++ adjNeighbours
//          val allVisitedNeighbours = visitedNeighbours ++ allNeighbours
//          val allNextLevelUnvisitedAdjNeighbours =
//            allNeighbours.flatMap(adjNeighboursOf) -- allVisitedNeighbours
//          val allNextLevelUnvisitedSameNumNeighbours =
//            sameNumNeighbours.headOption.map(sameNumNeighboursOf).getOrElse(Set()) ++
//              adjNeighbours.flatMap(sameNumNeighboursOf) --
//              allVisitedNeighbours
//
//          fillMinJumps(jumpCount + 1, allNextLevelUnvisitedSameNumNeighbours, allNextLevelUnvisitedAdjNeighbours, allVisitedNeighbours)
//        }
//      }

      if (arr.length == 1) {
        0
      } else {
        val sameNumNeighbours = sameNumNeighboursOf(arr.length - 1)
        val adjNeighbours = adjNeighboursOf(arr.length - 1)
//        fillMinJumps(0, sameNumNeighbours, adjNeighbours, Set(arr.length - 1))
        1
      }
    }
  }

}
